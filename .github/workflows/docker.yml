name: docker

on:
    push:
        branches:
            - stable
        tags:
            - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    # Enable self-hosted runners for the sigp repo only.
    SELF_HOSTED_RUNNERS: ${{ github.repository == 'sigp/anchor' }}
    RUST_VERSION: 'abc'

jobs:
    extract-version:
        uses: ./.github/workflows/extract-version.yml

    build-docker:
        name: build-docker-${{ matrix.binary }}
        # Use self-hosted runners only on the sigp repo.
        runs-on: ${{ github.repository == 'sigp/anchor' && fromJson('["self-hosted", "linux", "release"]') || 'ubuntu-22.04'  }}
        strategy:
            matrix:
                binary: [anchor]
                include:
                    - profile: maxperf

        needs: [extract-version]
        env:
            VERSION: ${{ needs.extract-version.outputs.VERSION }}
            VERSION_SUFFIX: ${{ needs.extract-version.outputs.VERSION_SUFFIX }}
        steps:
            - uses: actions/checkout@v4
            - name: Update Rust
              if: env.SELF_HOSTED_RUNNERS == 'false'
              run: rustup update stable

            - name: Get rust-version 
              id: get-rust-version 
              run: |
                echo "RUST_VERSION=$(./.github/scripts/toml_reader.sh ./anchor/Cargo.toml package rust-version)" >> $GITHUB_ENV
          
            - name: Get latest version of stable Rust
              run: echo "rust version is ${{ env.RUST_VERSION }}"

            - name: Retrieve Docker credentials from Vault
              uses: hashicorp/vault-action@v2
              with:
                url: https://vault.sigp.io
                method: github
                githubToken: ${{ secrets.GH_TOKEN }}
                secrets: |
                    spesi_kv/data/dev/docker/anchor DOCKER_USERNAME ;
                    spesi_kv/data/dev/docker/anchor DOCKER_PASSWORD

            - name: Dockerhub login
              run: |
                  echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

            - name: Build binary
              run: |
                make

            - name: Make bin dir
              run: mkdir ./bin

            - name: Move built binary into Docker scope
              run: mv ./target/release/${{ matrix.binary }} ./bin

            - name: Set up Docker Buildx
              if: env.SELF_HOSTED_RUNNERS == 'false'
              uses: docker/setup-buildx-action@v3

            - name: Build and push (Anchor)
              uses: docker/build-push-action@v5
              with:
                file: ./anchor/Dockerfile
                context: .
                push: true
                tags: |
                  ${{ github.repository_owner}}/${{ matrix.binary }}:${{ env.VERSION }}${{ env.VERSION_SUFFIX }}
                build-args: |
                  RUST_VERSION=${{ env.RUST_VERSION }}
